{"version":3,"sources":["templates sync /^/.//.*//settings/.js$","templates/another/settings.js","templates/centered/settings.js","templates/default/settings.js","templates/people/settings.js","util/flattenSettings.js","util/flattenSettingsRaw.js","providers/theme.js","templates/helpers/GithubLogo.js","templates/helpers/CenterGroup.js","templates/helpers/ImageBoundingBox.js","templates/helpers/ShapeGrid.js","util/uiColors.js","templates/helpers/DrawBox.js","templates/helpers/Interactive.js","templates/helpers/UserAvatar.js","templates/people/index.js","templates/default/index.js","templates/another/index.js","templates/centered/index.js","svg/gh-fork.js","svg/gh-issues.js","svg/gh-star.js","components/Artboard.js","templates/list.js","components/Layer.js","components/LayerRepeater.js","components/sidebar/FieldsetHeading.js","components/sidebar/Fieldset.js","components/FetchUrl.js","components/getGithubRepo.js","components/sidebar/pickers/RepoPicker.js","components/Sidebar.js","components/Toolbar.js","components/DownloadButton.js","components/EmptyState.js","components/sidebar/pickers/ColorPicker.js","components/sidebar/pickers/ImagePickerThumbs.js","components/sidebar/pickers/ImagePicker.js","components/sidebar/pickers/FontPicker.js","components/sidebar/pickers/DescriptionPicker.js","components/PropertySwitch.js","components/PropertyList.js","components/Properties.js","EditorLayout.js","LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","layers","type","label","settings","value","children","editable","visible","palette","options","hideable","flattenSettings","flat","mapLayerGroup","Infinity","filter","val","assign","g","nested","mapLayerSettings","l","keyedSettings","reduce","acc","flattenSettingsRaw","initialState","require","theme","userSettings","userSettingsRaw","repo","description","fork","forks","full_name","language","name","open_issues","watchers","owner","avatar_url","login","ThemeContext","React","createContext","useTheme","useContext","ThemeProvider","stageRef","useRef","useState","width","height","layout","setLayout","useReducer","oldRepo","newRepo","setRepo","oldTheme","newTheme","setTheme","selectedLayer","setSelectedLayer","hoveredLayer","setHoveredLayer","Provider","GitHubLogo","fill","props","src","img","document","createElement","window","btoa","image","CenterGroup","stageWidth","stageHeight","innerHeight","calcY","y","ImageBoundingBox","imagePath","maxWidth","maxHeight","x","useImage","imageDimensions","srcWidth","srcHeight","ratio","Math","min","calculateAspectRatioFit","imageX","imageY","len","Array","MakeShapes","color","shape","rows","columns","size","offsetX","offsetY","yPos","otherValue","xPos","key","toString","radius","ShapeGrid","colors","uiColors","sidebarLayer","selected","cyan","hovered","disabledHover","gray","disabledSelected","artboardLayer","artboardText","default","DrawBox","dimensions","strokeWidth","stroke","fillEnabled","Interactive","isHovered","isSelected","setDimensions","onClick","onMouseEnter","target","onMouseLeave","UserAvatar","rounded","loadedSrc","PeopleTheme","customDescription","isCurrentTheme","peopleImagePath","illustration","textHeight","setTextHeight","artboard","background","bottomShape","githubLogo","text","fontFamily","repoInfo","font","fontSize","fontStyle","letterSpacing","lineHeight","ref","node","getHeight","DefaultTheme","shapeGrid","AnotherTheme","BORDER_INDENT","shadowBlur","shadowOpacity","gitHubColor","CenteredTheme","shapeGrid1","shapeGrid2","align","xml","stats","iconColor","Intl","NumberFormat","format","textColor","SelectedTheme","Artboard","py","cursor","boxShadow","Consumer","list","title","path","Layer","level","setVisibility","theRest","hoveredColor","selectedColor","bg","pl","mr","getIcon","flexGrow","justifySelf","LayerRepeater","bool","newFlatSettings","merge","newRawSettings","mapLayers","item","Fragment","c","FieldsetHeading","borderBottomColor","borderBottomWidth","pb","mb","as","textTransform","fontWeight","Fieldset","FetchUrl","callback","url","setUrl","onSubmit","provider","match","getProvider","split","username","preventDefault","onChange","colorScheme","getGithubRepo","a","fetch","res","json","RepoPicker","useDisclosure","isOpen","onOpen","onClose","toast","useToast","flexShrink","ml","overflow","whiteSpace","textOverflow","textDecoration","githubRepo","message","status","duration","isClosable","position","render","px","borderRadius","Check","Sidebar","p","w","onThemeChange","Toolbar","justifyContent","pos","style","marginRight","pkg","version","variant","href","isExternal","DownloadButton","snapshot","fragment","Date","valueOf","slice","uri","link","download","body","appendChild","click","removeChild","downloadURI","current","toDataURL","alignSelf","_hover","setTimeout","EmptyState","textAlign","ColorPicker","updateOpenState","setIsOpen","top","transform","left","readOnly","right","bottom","zIndex","rgb","r","b","hex","presetColors","Thumbs","selectedStyle","opacity","unselectedStyle","flexWrap","localStyle","thumbUrl","replace","objectFit","ImagePicker","FontPicker","DescriptionPicker","PropertySwitch","PropertyList","properties","onSettingChange","otherProperies","length","propertyId","index","Properties","values","flexDirection","settingKey","settingValue","EditorLayout","direction","alignItems","getAttribute","data-id","LandingPage","display","placeItems","alt","mt","to","FontFaceObserver","App","fontsLoaded","setFontsLoaded","fontA400","weight","fontA600","fontA800","fontC","fontD","fontE","Promise","all","load","then","exact","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.7f5b1e23.chunk.js","sourcesContent":["var map = {\n\t\"./another/settings.js\": 292,\n\t\"./centered/settings.js\": 293,\n\t\"./default/settings.js\": 294,\n\t\"./people/settings.js\": 295\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 172;","const layers = [{\n    id: 'artboard',\n    type: 'artboard',\n    label: 'Artboard',\n    settings: [{\n        id: 'background',\n        type: 'color',\n        label: 'Background',\n        value: '#FFF'\n    }],\n    children: [{\n        type: 'text',\n        id: 'description',\n        label: 'Description',\n        settings: [{\n            id: 'color',\n            type: 'color',\n            label: 'Color',\n            value: '#000'\n        }]\n    },\n    {\n        type: 'group',\n        id: 'repoDetails',\n        label: 'Repository Details',\n        children: [{\n            type: 'svg',\n            id: 'githubLogo',\n            label: 'GitHub Logo',\n            settings: [{\n                type: 'color',\n                id: 'fill',\n                label: 'Fill',\n                value: 'rgba(0,0,0,0.2)'\n            }]\n        }, {\n            type: 'image',\n            id: 'avatar',\n            label: 'Avatar',\n            editable: false,\n            visible: false,\n        }, {\n            type: 'text',\n            id: 'repoInfo',\n            label: 'Information',\n            settings: [{\n                id: 'color',\n                type: 'color',\n                label: 'Color',\n                value: '#000'\n            }]\n        }]\n    }, {\n        type: 'symbol',\n        id: 'shapeGrid',\n        label: 'Shape Grid',\n        settings: [{\n            type: 'color',\n            id: 'fill',\n            label: 'Fill',\n            value: 'rgba(0,0,0,0.2)'\n        }]\n    }]\n}]\nconst palette = ['#030047', '#FF3E6C', '#FFC2D6', '#FFCC3E', '#5F5FFF'];\n\nmodule.exports = {\n    layers,\n    palette\n}","const layers = [{\n    id: 'artboard',\n    type: 'artboard',\n    label: 'Artboard',\n    settings: [{\n        id: 'background',\n        type: 'color',\n        label: 'Background',\n        value: '#3F00F1'\n    }],\n    children: [{\n        type: 'svg',\n        id: 'githubLogo',\n        label: 'GitHub Logo',\n        settings: [{\n            type: 'color',\n            id: 'fill',\n            label: 'Fill',\n            value: '#FFF'\n        }]\n    }, {\n        type: 'image',\n        id: 'avatar',\n        label: 'Avatar',\n        visible: false,\n        settings: []\n    }, {\n        type: 'text',\n        id: 'repoInfo',\n        label: 'Information',\n        settings: [{\n            id: 'color',\n            type: 'color',\n            label: 'Color',\n            value: '#FFF'\n        }]\n    }, {\n        type: 'text',\n        id: 'description',\n        label: 'Description',\n        settings: [{\n            id: 'color',\n            type: 'color',\n            label: 'Color',\n            value: 'rgba(255,255,255,0.8)'\n        }, {\n            id: 'font',\n            type: 'font',\n            label: 'Font',\n            value: 'Poppins',\n            options: [\n                'Poppins',\n                'Inter'\n            ]\n        }, {\n            id: 'customDescription',\n            type: 'description',\n            label: 'Override Description',\n            value: null\n        }]\n    }, {\n        type: 'group',\n        id: 'stats',\n        label: 'Stats',\n        settings: [{\n            id: 'textColor',\n            type: 'color',\n            label: 'Text Color',\n            value: '#FFFFFF'\n        }, {\n            id: 'iconColor',\n            type: 'color',\n            label: 'Icon Color',\n            value: 'rgba(255,255,255,0.66)'\n        }]\n    }, {\n        type: 'symbol',\n        id: 'shapeGrid1',\n        label: 'Shape Grid 1',\n        settings: [{\n            type: 'color',\n            id: 'fill',\n            label: 'Fill',\n            value: 'rgba(255,255,255,0.35)'\n        }]\n    }, {\n        type: 'symbol',\n        id: 'shapeGrid2',\n        label: 'Shape Grid 2',\n        settings: [{\n            type: 'color',\n            id: 'fill',\n            label: 'Fill',\n            value: 'rgba(255,255,255,0.35)'\n        }]\n    }]\n}]\nconst palette = ['#030047', '#FF3E6C', '#FFC2D6', '#FFCC3E', '#5F5FFF'];\n\nmodule.exports = {\n    layers,\n    palette\n}","const layers = [{\n    id: 'artboard',\n    type: 'artboard',\n    label: 'Artboard',\n    hideable: false,\n    settings: [{\n        id: 'background',\n        type: 'color',\n        label: 'Background',\n        value: '#3F00F1'\n    }],\n    children: [{\n        type: 'text',\n        id: 'description',\n        label: 'Description',\n        settings: [{\n            id: 'color',\n            type: 'color',\n            label: 'Color',\n            value: '#FFF'\n        }, {\n            id: 'font',\n            type: 'font',\n            label: 'Font',\n            value: 'Poppins',\n            options: [\n                'Poppins',\n                'Inter'\n            ]\n        }, {\n            id: 'customDescription',\n            type: 'description',\n            label: 'Override Description',\n            value: null\n        }]\n    },\n    {\n        type: 'group',\n        id: 'repoDetails',\n        label: 'Repository Details',\n        hideable: false,\n        children: [{\n            type: 'svg',\n            id: 'githubLogo',\n            label: 'GitHub Logo',\n            settings: [{\n                type: 'color',\n                id: 'fill',\n                label: 'Fill',\n                value: 'rgba(255,255,255,0.85)'\n            }]\n        }, {\n            type: 'image',\n            id: 'avatar',\n            label: 'Avatar',\n            visible: false,\n        }, {\n            type: 'text',\n            id: 'repoInfo',\n            label: 'Information',\n            settings: [{\n                id: 'color',\n                type: 'color',\n                label: 'Color',\n                value: '#FFF'\n            }, {\n                id: 'font',\n                type: 'font',\n                label: 'Font',\n                value: 'Poppins',\n                options: [\n                    'Poppins',\n                    'Inter'\n                ]\n            }]\n        }]\n    }, {\n        type: 'symbol',\n        id: 'shapeGrid',\n        label: 'Shape Grid',\n        settings: [{\n            type: 'color',\n            id: 'fill',\n            label: 'Fill',\n            value: 'rgba(255,255,255,0.25)'\n        }]\n    }]\n}]\nconst palette = [\n    '#02002E',\n    '#030047',\n    '#5D5C89',\n    '#FF3E6C',\n    '#FFA0B7',\n    '#FFC2D6',\n    '#FFF4F7',\n    '#FFCC3E',\n    '#FFE6A0',\n    '#FFF2CF',\n    '#FFFAEE',\n    '#3F00F1',\n    '#5F5FFF',\n    '#B1B1FF',\n    '#D7D7FF',\n    '#F1F1FF',\n    '#FFFFFF'\n];\n\n\nmodule.exports = {\n    layers,\n    palette\n}","const layers = [{\n    id: 'artboard',\n    type: 'artboard',\n    label: 'Artboard',\n    hideable: false,\n    settings: [{\n        id: 'background',\n        type: 'color',\n        label: 'Background',\n        value: '#fff4f7'\n    }],\n    children: [{\n        type: 'text',\n        id: 'description',\n        label: 'Description',\n        settings: [{\n            id: 'color',\n            type: 'color',\n            label: 'Color',\n            value: '#030047'\n        }, {\n            id: 'font',\n            type: 'font',\n            label: 'Font',\n            value: 'Poppins',\n            options: [\n                'Poppins',\n                'Libre Baskerville',\n                'Inter'\n            ]\n        }, {\n            id: 'customDescription',\n            type: 'description',\n            label: 'Override Description',\n            value: null\n        }]\n    },\n    {\n        type: 'group',\n        id: 'repoDetails',\n        label: 'Repository Details',\n        hideable: false,\n        children: [{\n            type: 'svg',\n            id: 'githubLogo',\n            label: 'GitHub Logo',\n            settings: [{\n                type: 'color',\n                id: 'fill',\n                label: 'Fill',\n                value: 'rgba(3,0,71,0.7)'\n            }]\n        }, {\n            type: 'image',\n            id: 'avatar',\n            label: 'Avatar',\n            editable: false,\n            visible: false,\n        }, {\n            type: 'text',\n            id: 'repoInfo',\n            label: 'Information',\n            settings: [{\n                id: 'color',\n                type: 'color',\n                label: 'Color',\n                value: '#030047'\n            }, {\n                id: 'font',\n                type: 'font',\n                label: 'Font',\n                value: 'Poppins',\n                options: [\n                    'Poppins',\n                    'Libre Baskerville',\n                    'Inter'\n                ]\n            }]\n        }]\n    }, {\n        type: 'image',\n        id: 'illustration',\n        label: 'Illustration',\n        settings: [{\n            type: 'image',\n            id: 'image',\n            label: 'Image',\n            value: 'people-124.png',\n            options: [\n                'people-014.png', 'people-026.png', 'people-034.png', 'people-035.png', 'people-055.png', 'people-106.png', 'people-124.png', 'people-134.png', 'people-145.png', 'people-174.png', 'people-184.png', 'people-185.png',\n            ]\n        }]\n    }, {\n        type: 'shape',\n        id: 'bottomShape',\n        label: 'Bottom Shape',\n        visible: true,\n        settings: [{\n            type: 'color',\n            id: 'fill',\n            label: 'Fill',\n            value: '#FFF'\n        }]\n    }]\n}];\nconst palette = [\n    '#02002E',\n    '#030047',\n    '#5D5C89',\n    '#FF3E6C',\n    '#FFA0B7',\n    '#FFC2D6',\n    '#FFF4F7',\n    '#FFCC3E',\n    '#FFE6A0',\n    '#FFF2CF',\n    '#FFFAEE',\n    '#5F5FFF',\n    '#B1B1FF',\n    '#D7D7FF',\n    '#F1F1FF',\n    '#FFFFFF'\n];\n\nmodule.exports = {\n    layers,\n    palette\n}","const flattenSettings = layers => {\n    const flat = layers.map(mapLayerGroup).flat(Infinity).filter(val => !!val);\n    return Object.assign(...flat);\n}\n\nconst mapLayerGroup = g => {\n    const nested = (g.children || []).map(mapLayerGroup);\n    return [mapLayerSettings(g), ...nested];\n}\n\nconst mapLayerSettings = l => {\n    if (!l.id) {\n        return null;\n    }\n    const keyedSettings = (l.settings || []).reduce((acc, val) => {\n        acc[val.id] = val.value;\n        return acc;\n    }, {});\n    return {\n        [l.id]: {\n            visible: !(l.visible === false),\n            ...keyedSettings\n        }\n    }\n}\n\nexport { flattenSettings }","const flattenSettingsRaw = layers => {\n    const flat = layers.map(mapLayerGroup).flat(Infinity).filter(val => !!val);\n    return Object.assign(...flat);\n}\n\nconst mapLayerGroup = g => {\n    const nested = (g.children || []).map(mapLayerGroup);\n    return [mapLayerSettings(g), ...nested];\n}\n\nconst mapLayerSettings = l => {\n    if (!l.id) {\n        return null;\n    }\n    const keyedSettings = (l.settings || []).reduce((acc, val) => {\n        acc[val.id] = val\n        return acc;\n    }, {});\n    return {\n        [l.id]: {\n            visible: !(l.visible === false),\n            ...keyedSettings\n        }\n    }\n}\n\nexport { flattenSettingsRaw }","import React, { useState, useContext, useReducer, useRef } from 'react';\nimport { flattenSettings } from '../util/flattenSettings';\nimport { flattenSettingsRaw } from '../util/flattenSettingsRaw';\n\nlet initialState = {}\n// initialState.theme = 'people';\n// initialState.theme = 'default';\ninitialState.theme = 'centered';\nconst options = require(`../templates/${initialState.theme}/settings.js`);\ninitialState.settings = options.layers;\ninitialState.palette = options.palette;\ninitialState.userSettings = flattenSettings(initialState.settings);\ninitialState.userSettingsRaw = flattenSettingsRaw(initialState.settings);\ninitialState.repo = {\n    description: 'The \"Aristo\" theme for Cappuccino ported to a jQuery UI Theme',\n    fork: false,\n    forks: 172,\n    full_name: \"taitems/Aristo-jQuery-UI-Theme\",\n    language: \"JavaScript\",\n    name: \"Aristo-jQuery-UI-Theme\",\n    open_issues: 10,\n    watchers: 1367,\n    owner: {\n        avatar_url: \"https://avatars2.githubusercontent.com/u/234593?v=4\",\n        login: 'taitems'\n    }\n}\n\nconst ThemeContext = React.createContext([[], []])\n\nconst useTheme = () => useContext(ThemeContext);\n\nconst ThemeProvider = ({\n    children\n}) => {\n\n    const stageRef = useRef();\n\n    const [layout, setLayout] = useState({\n        width: 1200,\n        height: 627,\n    });\n\n    const [repo, setRepo] = useReducer(\n        (oldRepo, newRepo) => ({ ...oldRepo, ...newRepo }),\n        { ...initialState.repo }\n    );\n    const [theme, setTheme] = useReducer(\n        (oldTheme, newTheme) => ({ ...oldTheme, ...newTheme }),\n        { id: initialState.theme, palette: initialState.palette, settings: initialState.settings, userSettings: initialState.userSettings, userSettingsRaw: initialState.userSettingsRaw }\n    )\n    const [selectedLayer, setSelectedLayer] = useState(null);\n    const [hoveredLayer, setHoveredLayer] = useState(null);\n\n    return (\n        <ThemeContext.Provider\n            value={[{\n                repo,\n                theme,\n                stageRef,\n                layout,\n                selectedLayer,\n                hoveredLayer,\n            }, {\n                setRepo,\n                setTheme,\n                setLayout,\n                setSelectedLayer,\n                setHoveredLayer,\n            }]}\n        >\n            {children}\n        </ThemeContext.Provider>\n    )\n}\n\nexport { useTheme, ThemeContext, ThemeProvider };","import React from 'react';\nimport { Image } from \"react-konva\";\nconst GitHubLogo = ({ fill, ...props }) => {\n    const src = `<?xml version=\"1.0\"?><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"${fill}\" d=\"M11.999.5c-6.35 0-11.499 5.148-11.499 11.5 0 5.082 3.294 9.392 7.865 10.914.574.104.756-.236.756-.541 0-.274.006-1.037 0-1.997-3.198.694-3.861-1.515-3.861-1.515-.522-1.329-1.275-1.682-1.275-1.682-1.045-.714.078-.699.078-.699 1.153.08 1.762 1.184 1.762 1.184 1.026 1.758 2.691 1.25 3.346.956.105-.742.402-1.251.731-1.536-2.554-.292-5.238-1.277-5.238-5.686 0-1.255.448-2.281 1.184-3.086-.119-.289-.515-1.459.111-3.042 0 0 .967-.31 3.162 1.18.918-.256 1.902-.383 2.88-.388.977.005 1.96.132 2.88.388 2.195-1.488 3.159-1.18 3.159-1.18.627 1.583.232 2.754.114 3.043.736.805 1.183 1.831 1.183 3.086 0 4.42-2.688 5.391-5.251 5.674.412.357.787 1.047.787 2.12v3.184c0 .308.186.647.77.536 4.566-1.524 7.857-5.833 7.857-10.913 0-6.352-5.148-11.5-11.501-11.5z\"></path></svg>`;\n    const img = document.createElement('img');\n    img.src = 'data:image/svg+xml;base64,' + window.btoa(src);\n    return <Image image={img} {...props} />\n}\nexport { GitHubLogo }\n\n","import React from 'react';\nimport { Group } from \"react-konva\";\nconst CenterGroup = ({ stageWidth, stageHeight, innerHeight, ...props }) => {\n    const calcY = innerHeight ? (stageHeight / 2) - (innerHeight / 2) : 0;\n    return <Group {...props} y={calcY} />\n}\nexport { CenterGroup }","import React from 'react';\nimport { Group, Image } from \"react-konva\";\nimport useImage from 'use-image';\n\n/**\n * Conserve aspect ratio of the original region. Useful when shrinking/enlarging\n * images to fit into a certain area.\n *\n * @param {Number} srcWidth width of source image\n * @param {Number} srcHeight height of source image\n * @param {Number} maxWidth maximum available width\n * @param {Number} maxHeight maximum available height\n * @return {Object} { width, height }\n */\nfunction calculateAspectRatioFit(srcWidth, srcHeight, maxWidth, maxHeight) {\n\n    var ratio = Math.min(maxWidth / srcWidth, maxHeight / srcHeight);\n\n    return { width: srcWidth * ratio, height: srcHeight * ratio };\n}\n\nconst ImageBoundingBox = ({ imagePath, maxWidth, maxHeight, x = 0, y = 0 }) => {\n\n    const [image] = useImage(imagePath);\n\n    if (!image) {\n        return null;\n    }\n\n    const imageDimensions = calculateAspectRatioFit(image.width, image.height, maxWidth, maxHeight)\n    const { width, height } = imageDimensions;\n    const imageX = (maxWidth - width) / 2;\n    const imageY = (maxHeight - height) / 2;\n\n    return (\n        <Group x={x} y={y}>\n            <Image\n                image={image}\n                width={width}\n                height={height}\n                x={imageX}\n                y={imageY}\n            />\n        </Group>\n    )\n}\n\nexport { ImageBoundingBox };","import React from 'react';\nimport { Group, Rect, Circle } from \"react-konva\";\n\nconst fill = len => { return new Array(len).fill(0) };\n\n\nconst MakeShapes = ({ color, shape, rows, columns, size, offsetX, offsetY }) => {\n    return fill(rows).map((value, yPos) => {\n        return fill(columns).map((otherValue, xPos) => {\n            if (shape === 'square') {\n                return <Rect\n                    key={yPos.toString() + xPos.toString()}\n                    x={xPos * offsetX}\n                    y={yPos * offsetY}\n                    width={size}\n                    height={size}\n                    fill={color}\n                />\n            } else if (shape === 'circle') {\n                return <Circle\n                    key={yPos.toString() + xPos.toString()}\n                    x={xPos * offsetX}\n                    y={yPos * offsetY}\n                    radius={size / 2}\n                    fill={color}\n                />\n            }\n            return null;\n        })\n    })\n}\n\nconst ShapeGrid = ({ color, shape = 'triangle', rows = 24, columns = 4, size = 8, offsetX = 24, offsetY = 24 }) => {\n    const width = columns * size + (columns - 1) * offsetX;\n    const height = rows * size + (rows - 1) * offsetY;\n    return <Group>\n        <MakeShapes\n            color={color}\n            shape={shape}\n            rows={rows}\n            columns={columns}\n            size={size}\n            offsetX={offsetX}\n            offsetY={offsetY}\n        />\n        <Rect fill=\"rgba(0,0,0,0)\" width={width} height={height} />\n    </Group>\n}\n\nexport { ShapeGrid }","import { theme } from '@chakra-ui/react';\nconst { colors } = theme;\n\nconst uiColors = {\n    sidebarLayer: {\n        selected: colors.cyan['100'],\n        hovered: colors.cyan['50'],\n        disabledHover: colors.gray['50'],\n        disabledSelected: colors.gray['100'],\n    },\n    artboardLayer: {\n        selected: colors.cyan['300'],\n        hovered: colors.cyan['400']\n    },\n    artboardText: {\n        selected: colors.cyan['400'],\n        hovered: colors.cyan['500'],\n        default: colors.gray['400']\n    }\n}\n\nexport { uiColors } \n","import React from 'react';\nimport { Rect } from \"react-konva\";\n\nconst DrawBox = ({ color, dimensions, strokeWidth }) => {\n    return (\n        <Rect\n            x={dimensions.x + 1}\n            y={dimensions.y + 1}\n            width={dimensions.width - strokeWidth}\n            height={dimensions.height - strokeWidth}\n            stroke={color}\n            strokeWidth={strokeWidth}\n            fillEnabled={false}\n        />\n    );\n}\n\nexport { DrawBox }","import React, { useState } from 'react';\nimport { Group } from \"react-konva\";\nimport { useTheme } from '../../providers/theme';\nimport { uiColors } from '../../util/uiColors';\nimport { DrawBox } from './DrawBox';\n\nconst Interactive = ({ id, children }) => {\n\n    const [{ hoveredLayer, selectedLayer, theme }, { setHoveredLayer, setSelectedLayer }] = useTheme();\n    const isHovered = hoveredLayer && hoveredLayer === id;\n    const isSelected = selectedLayer && selectedLayer === id;\n    const [dimensions, setDimensions] = useState(null);\n\n\n    if (theme.userSettings[id].visible === false) {\n        return null;\n    }\n\n    return (\n        <>\n            <Group\n                onClick={e => setSelectedLayer(id)}\n                onMouseEnter={e => {\n                    !dimensions && setDimensions({\n                        x: e.target.x(),\n                        y: e.target.y(),\n                        width: e.target.width(),\n                        height: e.target.height(),\n                    })\n                    setHoveredLayer(id);\n                }}\n                onMouseLeave={e => {\n                    setHoveredLayer(null);\n                }}\n            >\n                {children}\n            </Group>\n            {isSelected && dimensions && <DrawBox dimensions={dimensions} color={uiColors.artboardLayer.selected} strokeWidth={3} />}\n            {isHovered && dimensions && !isSelected && <DrawBox dimensions={dimensions} color={uiColors.artboardLayer.hovered} strokeWidth={3} />}\n        </>\n    )\n}\n\nexport { Interactive }","import React from 'react'\nimport { Image } from \"react-konva\";\nimport { CircleImage } from \"react-konva-helpers\";\nimport useImage from 'use-image';\n\nconst UserAvatar = ({ src, rounded = true, ...props }) => {\n    const [loadedSrc] = useImage(src);\n    if (!loadedSrc) {\n        return null;\n    }\n    return rounded ? <CircleImage src={loadedSrc} {...props} /> : <Image {...props} image={loadedSrc} />\n}\n\nexport { UserAvatar }\n","import React, { useState } from 'react';\nimport { Layer, Group, Rect, Text } from \"react-konva\";\nimport { useTheme } from '../../providers/theme';\nimport { GitHubLogo, ImageBoundingBox, CenterGroup } from '../helpers';\nimport { Interactive } from '../helpers/Interactive';\nimport { UserAvatar } from '../helpers/UserAvatar';\n\nconst PeopleTheme = () => {\n\n    const [{ theme, layout, repo }] = useTheme();\n    const { width, height } = layout;\n    const { full_name } = repo;\n    const layers = theme.userSettings;\n\n    const description = layers.description.customDescription || repo.description;\n\n    const isCurrentTheme = theme.id === 'people';\n\n    // const [peopleImage] = useImage(`images/${layers.illustration.image}`);\n    const peopleImagePath = isCurrentTheme && `images/${layers.illustration.image}`;\n    const [textHeight, setTextHeight] = useState(null);\n\n    if (!isCurrentTheme) {\n        return null;\n    }\n\n\n    return <Layer>\n\n\n        <Interactive id=\"artboard\">\n            <Rect\n                x={0}\n                y={0}\n                width={width}\n                height={height}\n                fill={layers.artboard.background}\n            />\n        </Interactive>\n\n\n        <Group\n            x={0}\n            y={height * .85}>\n            <Interactive id=\"bottomShape\">\n                <Rect\n                    width={width}\n                    height={height * .15}\n                    fill={layers.bottomShape.fill}\n                />\n            </Interactive>\n        </Group>\n\n        <Group x={700} y={113}>\n            <Interactive id=\"illustration\">\n                {peopleImagePath && <ImageBoundingBox imagePath={peopleImagePath} maxWidth={480} maxHeight={400} />}\n            </Interactive>\n        </Group>\n\n\n        <CenterGroup x={100} stageHeight={height} innerHeight={textHeight && 50 + textHeight}>\n\n            <Group>\n                <Interactive id=\"avatar\">\n                    <UserAvatar src={repo.owner.avatar_url} x={0} y={-6} width={32} height={32} />\n                </Interactive>\n                <Interactive id=\"githubLogo\">\n                    <GitHubLogo fill={layers.githubLogo.fill} width={32} height={32} y={-6} />\n                </Interactive>\n                <Interactive id=\"repoInfo\">\n                    <Text\n                        text={full_name}\n                        fontFamily={layers.repoInfo.font}\n                        fontSize={24}\n                        fontStyle={400}\n                        x={42}\n                        fill={layers.repoInfo.color}\n                    />\n                </Interactive>\n            </Group>\n\n            <Interactive id=\"description\">\n                <Text\n                    text={description}\n                    fontFamily={layers.description.font}\n                    fontSize={54}\n                    fontStyle={600}\n                    fill={layers.description.color}\n                    y={50}\n                    width={width * 0.5}\n                    letterSpacing={0}\n                    lineHeight={1.2}\n                    ref={node => {\n                        node && setTextHeight(node.getHeight())\n                    }}\n                />\n            </Interactive>\n        </CenterGroup>\n    </Layer>\n}\n\nexport default PeopleTheme;","import React, { useState } from 'react';\nimport { Layer, Group, Rect, Text } from \"react-konva\";\nimport { useTheme } from '../../providers/theme';\nimport { ShapeGrid, GitHubLogo, CenterGroup } from '../helpers';\nimport { Interactive } from '../helpers/Interactive';\nimport { UserAvatar } from '../helpers/UserAvatar';\n\nconst DefaultTheme = () => {\n\n    const [{ theme, layout, repo }] = useTheme();\n    const { width, height } = layout;\n    const { full_name } = repo;\n    const layers = theme.userSettings;\n\n    const [textHeight, setTextHeight] = useState(null);\n\n    const description = layers.description.customDescription || repo.description;\n\n    return <Layer>\n\n        <Interactive id=\"artboard\">\n            <Rect\n                x={0}\n                y={0}\n                width={width}\n                height={height}\n                fill={layers.artboard.background}\n            />\n        </Interactive>\n\n        <Group x={50} y={10}>\n            <Interactive id=\"shapeGrid\">\n                <ShapeGrid color={layers.shapeGrid.fill} shape={'square'} />\n            </Interactive>\n        </Group>\n\n\n        <CenterGroup x={200} stageHeight={height} innerHeight={textHeight && 50 + textHeight}>\n\n            <Group>\n\n                <Interactive id=\"githubLogo\">\n                    <GitHubLogo fill={layers.githubLogo.fill} width={32} height={32} y={-6} />\n                </Interactive>\n\n                <Interactive id=\"avatar\">\n                    <UserAvatar src={repo.owner.avatar_url} x={0} y={-6} width={32} height={32} />\n                </Interactive>\n\n                <Interactive id=\"repoInfo\">\n                    <Text\n                        text={full_name}\n                        fontFamily={layers.repoInfo.font}\n                        fontSize={24}\n                        fontStyle={600}\n                        x={42}\n                        fill={layers.repoInfo.color}\n                    />\n                </Interactive>\n            </Group>\n\n            <Interactive id=\"description\">\n                <Text\n                    text={description}\n                    fontFamily={layers.description.font}\n                    fontSize={72}\n                    fontStyle={600}\n                    fill={layers.description.color}\n                    y={50}\n                    width={width * 0.8}\n                    letterSpacing={-2.5}\n                    ref={node => {\n                        node && setTextHeight(node.getHeight())\n                    }}\n                />\n            </Interactive>\n        </CenterGroup>\n    </Layer>\n}\n\nexport default DefaultTheme;","import React from 'react';\nimport { Layer, Group, Rect, Text } from \"react-konva\";\nimport { useTheme } from '../../providers/theme';\nimport { ShapeGrid, GitHubLogo } from '../helpers';\n\nconst AnotherTheme = () => {\n\n    const [{ theme, layout, repo }] = useTheme();\n    const { width, height } = layout;\n    const { full_name, description } = repo;\n    const layers = theme.userSettings;\n\n    const BORDER_INDENT = 75;\n\n    return <Layer>\n\n        <Rect\n            x={0}\n            y={0}\n            width={width}\n            height={height}\n            fill={layers.artboard.background}\n        />\n\n        <ShapeGrid color={layers.shapeGrid.fill} shape=\"square\" />\n\n        <Rect\n            x={BORDER_INDENT}\n            y={BORDER_INDENT}\n            width={width - BORDER_INDENT * 2}\n            height={height - BORDER_INDENT * 2}\n            fill={'#FFF'}\n            shadowBlur={30}\n            shadowOpacity={0.1}\n        />\n        <Rect\n            x={BORDER_INDENT}\n            y={BORDER_INDENT}\n            width={width - BORDER_INDENT * 2}\n            height={height - BORDER_INDENT * 2}\n            fill={'#FFF'}\n            shadowBlur={10}\n            shadowOpacity={0.05}\n        />\n\n        <Group x={200}>\n\n            <Group y={160}>\n\n                <GitHubLogo fill={layers.gitHubColor} width={32} height={32} y={-6} />\n\n                <Text\n                    text={full_name}\n                    fontFamily=\"Inter\"\n                    fontSize={24}\n                    fontStyle={400}\n                    x={42}\n                    fill={'#000'}\n                />\n            </Group>\n\n            <Text\n                text={description}\n                fontFamily=\"Inter\"\n                fontSize={72}\n                fontStyle={800}\n                fill={'#000'}\n                y={210}\n                width={width * 0.8}\n                letterSpacing={-2.5}\n            />\n        </Group>\n    </Layer>\n}\n\nexport default AnotherTheme;","import React from 'react';\nimport { Layer, Group, Rect, Text } from \"react-konva\";\nimport { SvgIcon } from \"react-konva-helpers\";\nimport { useTheme } from '../../providers/theme';\nimport { ShapeGrid, GitHubLogo } from '../helpers';\nimport { Interactive } from '../helpers/Interactive';\nimport { UserAvatar } from '../helpers/UserAvatar';\nimport GithubForkIcon from '../../svg/gh-fork';\nimport GithubIssuesIcon from '../../svg/gh-issues';\nimport GithubStarIcon from '../../svg/gh-star';\n\nconst CenteredTheme = props => {\n\n    const [{ theme, layout, repo }] = useTheme();\n    const { width, height } = layout;\n    const { full_name, forks, open_issues, watchers } = repo;\n    const layers = theme.userSettings;\n    const description = layers.description.customDescription || repo.description;\n\n\n\n\n    const LOGO_SIZE = 180;\n\n    return <Layer>\n\n        <Interactive id=\"artboard\">\n            <Rect\n                x={0}\n                y={0}\n                width={width}\n                height={height}\n                fill={layers.artboard.background}\n            />\n        </Interactive>\n\n\n        <Group x={width - 305} y={30}>\n            <Interactive id=\"shapeGrid1\">\n                <ShapeGrid\n                    color={layers.shapeGrid1.fill}\n                    shape={'circle'}\n                    rows={3}\n                    size={6}\n                    columns={7}\n                    offsetX={45}\n                    offsetY={45}\n                />\n            </Interactive>\n        </Group>\n\n        <Group x={30} y={height - 120}>\n            <Interactive id=\"shapeGrid2\">\n                <ShapeGrid\n                    color={layers.shapeGrid2.fill}\n                    shape={'circle'}\n                    rows={3}\n                    size={6}\n                    columns={7}\n                    offsetX={45}\n                    offsetY={45}\n                />\n            </Interactive>\n        </Group>\n\n        <Interactive id=\"avatar\">\n            <UserAvatar\n                src={repo.owner.avatar_url}\n                width={LOGO_SIZE}\n                height={LOGO_SIZE}\n                y={112}\n                x={(width - LOGO_SIZE) / 2}\n            />\n        </Interactive>\n\n        <Interactive id=\"githubLogo\">\n            <GitHubLogo\n                fill={layers.githubLogo.fill}\n                width={LOGO_SIZE}\n                height={LOGO_SIZE}\n                y={112}\n                x={(width - LOGO_SIZE) / 2}\n            />\n        </Interactive>\n\n        <Interactive id=\"repoInfo\">\n            <Text\n                text={full_name}\n                fontFamily=\"Poppins\"\n                fontSize={48}\n                fontStyle={600}\n                fill={layers.repoInfo.color}\n                width={width * .8}\n                align=\"center\"\n                x={width * .1}\n                y={112 + LOGO_SIZE + 40}\n            />\n        </Interactive>\n\n\n        <Interactive id=\"description\">\n            <Text\n                text={description}\n                fontFamily=\"Poppins\"\n                fontSize={32}\n                fontStyle={400}\n                fill={layers.description.color}\n                width={width * .85}\n                x={width * .075}\n                y={398}\n                align=\"center\"\n            />\n        </Interactive>\n\n\n        <Group y={470} x={400} width={200}>\n            <Interactive id=\"stats\">\n                <SvgIcon xml={GithubForkIcon} fill={layers.stats.iconColor} x={0} />\n                <Text\n                    text={Intl.NumberFormat().format(forks)}\n                    fontFamily=\"Poppins\"\n                    fontSize={28}\n                    fontStyle={400}\n                    fill={layers.stats.textColor}\n                    width={width}\n                    align=\"left\"\n                    x={32}\n                />\n                <SvgIcon xml={GithubIssuesIcon} fill={layers.stats.iconColor} x={100} />\n                <Text\n                    text={Intl.NumberFormat().format(open_issues)}\n                    fontFamily=\"Poppins\"\n                    fontSize={28}\n                    fontStyle={400}\n                    fill={layers.stats.textColor}\n                    width={width}\n                    x={132}\n                    align=\"left\"\n                />\n                <SvgIcon xml={GithubStarIcon} fill={layers.stats.iconColor} x={200} />\n                <Text\n                    text={Intl.NumberFormat().format(watchers)}\n                    fontFamily=\"Poppins\"\n                    fontSize={28}\n                    fontStyle={400}\n                    fill={layers.stats.textColor}\n                    width={width}\n                    x={232}\n                    align=\"left\"\n                />\n            </Interactive>\n        </Group>\n    </Layer>\n}\n\nexport default CenteredTheme;","export default `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill-rule=\"evenodd\" d=\"M12 21a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zm-3.25-1.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zm-3-12.75a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM2.5 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0zM18.25 6.5a1.75 1.75 0 110-3.5 1.75 1.75 0 010 3.5zM15 4.75a3.25 3.25 0 106.5 0 3.25 3.25 0 00-6.5 0z\"></path><path fill-rule=\"evenodd\" d=\"M6.5 7.75v1A2.25 2.25 0 008.75 11h6.5a2.25 2.25 0 002.25-2.25v-1H19v1a3.75 3.75 0 01-3.75 3.75h-6.5A3.75 3.75 0 015 8.75v-1h1.5z\"></path><path fill-rule=\"evenodd\" d=\"M11.25 16.25v-5h1.5v5h-1.5z\"></path></svg>`","export default `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path d=\"M12 7a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0112 7zm1 9a1 1 0 11-2 0 1 1 0 012 0z\"></path><path fill-rule=\"evenodd\" d=\"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11S18.075 1 12 1zM2.5 12a9.5 9.5 0 1119 0 9.5 9.5 0 01-19 0z\"></path></svg>`\n","\nexport default `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill-rule=\"evenodd\" d=\"M12 .25a.75.75 0 01.673.418l3.058 6.197 6.839.994a.75.75 0 01.415 1.279l-4.948 4.823 1.168 6.811a.75.75 0 01-1.088.791L12 18.347l-6.117 3.216a.75.75 0 01-1.088-.79l1.168-6.812-4.948-4.823a.75.75 0 01.416-1.28l6.838-.993L11.328.668A.75.75 0 0112 .25zm0 2.445L9.44 7.882a.75.75 0 01-.565.41l-5.725.832 4.143 4.038a.75.75 0 01.215.664l-.978 5.702 5.121-2.692a.75.75 0 01.698 0l5.12 2.692-.977-5.702a.75.75 0 01.215-.664l4.143-4.038-5.725-.831a.75.75 0 01-.565-.41L12 2.694z\"></path></svg>`","import React from 'react';\nimport { Box } from \"@chakra-ui/react\";\nimport { Stage } from \"react-konva\";\nimport { ThemeContext, useTheme } from '../providers/theme';\nimport PeopleTheme from '../templates/people';\nimport DefaultTheme from '../templates/default';\nimport AnotherTheme from '../templates/another';\nimport CenteredTheme from '../templates/centered';\nimport { uiColors } from '../util/uiColors';\nconst { artboardText } = uiColors;\n\n// const SelectedTheme = loadable(props => import(`../templates/${props.id}`));\nconst SelectedTheme = ({ id }) => {\n    return ({\n        'people': <PeopleTheme />,\n        'default': <DefaultTheme />,\n        'another': <AnotherTheme />,\n        'centered': <CenteredTheme />,\n    }[id])\n}\n\nconst Artboard = () => {\n\n\n    const [{ stageRef, theme, layout, hoveredLayer, selectedLayer }, { setSelectedLayer, setHoveredLayer }] = useTheme();\n    const isHovered = hoveredLayer === 'artboard';\n    const isSelected = selectedLayer === 'artboard';\n    const textColor = isSelected ? artboardText.selected : isHovered ? artboardText.hovered : artboardText.default;\n\n    return <Box>\n        <Box\n            fontSize={13}\n            py={1}\n            color={textColor}\n            onClick={() => { setSelectedLayer('artboard') }}\n            onMouseEnter={() => { setHoveredLayer('artboard') }}\n            onMouseLeave={() => { setHoveredLayer(null) }}\n            cursor=\"default\"\n        >\n            Artboard - {layout.width} x {layout.height}\n        </Box>\n        <Box boxShadow=\"0 2px 20px rgba(0,0,0,0.1)\">\n            <ThemeContext.Consumer>\n                {value => (\n                    <Stage width={layout.width} height={layout.height} ref={stageRef}>\n                        <ThemeContext.Provider value={value}>\n                            <SelectedTheme id={theme.id} />\n                        </ThemeContext.Provider>\n                    </Stage>\n                )}\n            </ThemeContext.Consumer>\n        </Box>\n    </Box>\n}\n\nexport { Artboard }","export const list = [{\n    title: 'Default',\n    id: 'default',\n    path: './default/theme.js'\n    // }, {\n    //     title: 'Another',\n    //     id: 'another',\n    //     path: './another/theme.js'\n}, {\n    title: 'People',\n    id: 'people',\n    path: './people/theme.js'\n}, {\n    title: 'Centered',\n    id: 'centered',\n    path: './centered/theme.js'\n}]","import React from 'react';\nimport { Box, Flex, Image } from \"@chakra-ui/react\";\nimport { uiColors } from '../util/uiColors';\n\nconst { sidebarLayer } = uiColors;\n\nconst Layer = ({ label, id, level, visible = true, hideable = true, type, selected, hovered, setVisibility, ...theRest }) => {\n    const hoveredColor = visible ? sidebarLayer.hovered : sidebarLayer.disabledHover;\n    const selectedColor = visible ? sidebarLayer.selected : sidebarLayer.disabledSelected;\n    const bg = selected ? selectedColor : hovered ? hoveredColor : 'transparent';\n    return (\n        <Flex pl={level * 30 + 'px'} fontSize={14} py={1} bg={bg} cursor=\"default\" {...theRest}>\n            <Box mr={1}>\n                <Image src={`/svg/${getIcon(type)}`} />\n            </Box>\n            <Box color={visible ? '#000' : '#AAA'} flexGrow=\"1\">\n                {label}\n            </Box>\n            {hideable && !visible && <Image src=\"/svg/icon-hidden.svg\" justifySelf=\"flex-end\" onClick={() => { setVisibility(id, true) }} />}\n            {hideable && (selected || hovered) && visible && <Image src=\"/svg/icon-visible.svg\" justifySelf=\"flex-end\" onClick={() => { setVisibility(id, false) }} />}\n            {!hideable && (selected || hovered) && <Image src=\"/svg/icon-locked.svg\" justifySelf=\"flex-end\" />}\n        </Flex>\n    );\n}\n\nconst getIcon = type => {\n    switch (type) {\n        case 'artboard':\n            return 'icon-artboard.svg';\n        case 'text':\n            return 'icon-text.svg';\n        case 'image':\n        case 'svg':\n            return 'icon-image.svg';\n        case 'group':\n            return 'icon-layer.svg';\n        default:\n            return 'icon-layer.svg';\n    }\n}\n\nexport { Layer }","import React from 'react';\nimport { useTheme } from '../providers/theme';\nimport { merge } from 'lodash';\nimport { Layer } from './Layer';\n\n\nconst LayerRepeater = () => {\n\n    const [{ theme, selectedLayer, hoveredLayer }, { setTheme, setSelectedLayer, setHoveredLayer }] = useTheme();\n\n    const setVisibility = (id, bool) => {\n        const newFlatSettings = merge(theme.userSettings, {\n            [id]: {\n                'visible': bool\n            }\n        });\n        const newRawSettings = merge(theme.userSettingsRaw, {\n            [id]: {\n                'visible': {\n                    value: bool\n                }\n            }\n        });\n        setTheme({\n            userSettings: newFlatSettings,\n            userSettingsRaw: newRawSettings,\n        })\n    }\n\n    const mapLayers = (item, level = 0) => (\n        <React.Fragment key={item.id}>\n            <Layer\n                label={item.label}\n                level={level}\n                id={item.id}\n                hideable={item.hideable}\n                visible={theme.userSettings[item.id].visible}\n                type={item.type}\n                selected={item.id && item.id === selectedLayer}\n                hovered={item.id && item.id === hoveredLayer}\n                setVisibility={setVisibility}\n                onMouseEnter={e => {\n                    setHoveredLayer(item.id)\n                }}\n                onMouseLeave={e => {\n                    setHoveredLayer(null)\n                }}\n                onClick={e => {\n                    setSelectedLayer(item.id);\n                }}\n            />\n            {item.children && item.children.map(c => {\n                return mapLayers(c, level + 1)\n            })}\n        </React.Fragment>\n    )\n\n    return theme.settings && theme.settings.map(mapLayers)\n\n}\n\nexport { LayerRepeater }","import React from 'react';\nimport { Box, Text } from '@chakra-ui/react';\nconst FieldsetHeading = ({ children }) => {\n    return (\n        <Box\n            borderBottomColor=\"gray.100\"\n            borderBottomWidth=\"1px\"\n            pb={2}\n            mb={2}\n        >\n            <Text\n                as=\"h2\"\n                textTransform=\"uppercase\"\n                letterSpacing=\"0.025em\"\n                fontSize=\"11px\"\n                fontWeight=\"800\"\n                color=\"gray.900\"\n            >\n                {children}\n            </Text>\n        </Box>\n    )\n}\n\nexport { FieldsetHeading }","import React from 'react';\nimport { Box } from '@chakra-ui/react';\nimport { FieldsetHeading } from './FieldsetHeading';\nconst Fieldset = ({ title, children }) => {\n    return (\n        <Box mb={4}>\n            <FieldsetHeading>{title}</FieldsetHeading>\n            {children}\n        </Box>\n    )\n}\n\nexport { Fieldset }","import React, { useState } from 'react';\nimport { Input, Button, Flex } from \"@chakra-ui/react\";\n\n// https://api.github.com/users/taitems/repos\n// https://api.github.com/repos/taitems/Appfail-JavaScript\n\nconst FetchUrl = ({ callback }) => {\n\n    const [url, setUrl] = useState(\"https://github.com/taitems/Aristo-jQuery-UI-Theme\")\n\n    const getProvider = url => {\n        if (url.match('https://github.com') || url.match('https://www.github.com')) {\n            return 'github';\n        } else {\n            return null\n        }\n    }\n\n    const onSubmit = e => {\n        const provider = getProvider(url);\n        if (provider === 'github') {\n            // url.\n            const path = url.split('github.com/')[1];\n            const [username, repo] = path.split('/');\n            callback({\n                provider,\n                username,\n                repo\n            })\n        }\n        e.preventDefault();\n        return false;\n    };\n\n    return <form onSubmit={onSubmit}>\n        <Flex>\n            <Input\n                type=\"text\"\n                onChange={e => { setUrl(e.target.value) }}\n                value={url}\n            />\n            <Button type=\"submit\" colorScheme=\"blue\">Fetch</Button>\n        </Flex>\n    </form>\n}\n\nexport { FetchUrl }","const getGithubRepo = async (username, repo) => {\n    const res = await fetch(`https://api.github.com/repos/${username}/${repo}`);\n    return res.json();\n}\n\nexport { getGithubRepo };","import React from 'react';\nimport {\n    Box, Flex, Image, Link, Text, useToast, Button,\n    useDisclosure,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { CheckIcon } from '@chakra-ui/icons';\nimport { useTheme } from \"../../../providers/theme\"\nimport { FetchUrl } from '../../FetchUrl';\nimport { getGithubRepo } from '../../getGithubRepo';\n\nconst RepoPicker = () => {\n\n    const [{ repo }, { setRepo }] = useTheme();\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const toast = useToast();\n\n    return (<>\n        <Flex>\n            <Box flexShrink=\"0\">\n                <Image src=\"../svg/logo-github.svg\" width={30} height={30} />\n            </Box>\n            <Box ml={2} overflow=\"hidden\">\n                <Text\n                    fontSize={12}\n                    fontWeight={600}\n                    whiteSpace=\"nowrap\"\n                    overflow=\"hidden\"\n                    textOverflow=\"ellipsis\"\n                >\n                    {repo.full_name}\n                </Text>\n                <Text\n                    fontSize={12}\n                    whiteSpace=\"nowrap\"\n                    overflow=\"hidden\"\n                    textOverflow=\"ellipsis\"\n                >\n                    {repo.description}\n                </Text>\n                <Text\n                    fontSize={12}>\n                    <Link\n                        onClick={onOpen}\n                        color=\"blue.500\"\n                        fontWeight=\"500\"\n                        textDecoration=\"underline\"\n                    >\n                        Change repository\n                </Link>\n                </Text>\n            </Box>\n        </Flex>\n\n        <Modal isOpen={isOpen} onClose={onClose} size=\"xl\">\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Change Repository</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n\n                    <Text>\n                        Select a repository by pasting the <strong>public</strong> URL to a repository on GitHub.\n                    </Text>\n\n                    <FetchUrl callback={async item => {\n                        const { provider, username, repo } = item;\n                        if (provider === 'github') {\n                            const githubRepo = await getGithubRepo(username, repo);\n                            if (githubRepo.message) {\n                                toast({\n                                    title: \"An error occurred.\",\n                                    description: `Github responded: ${githubRepo.message}`,\n                                    status: \"error\",\n                                    duration: 9000,\n                                    isClosable: true,\n                                    position: \"top\",\n                                })\n                            } else {\n                                setRepo(githubRepo);\n                                onClose();\n                                toast({\n                                    position: \"top\",\n                                    render: () => (\n                                        <Box bg=\"#000\" color=\"#FFF\" py={2} px={3} borderRadius={4}>\n                                            <CheckIcon />\n                                            Switched to {githubRepo.full_name}\n                                        </Box>\n                                    )\n                                })\n                            }\n                        }\n                        return false;\n                    }} />\n\n                </ModalBody>\n                <ModalFooter>\n                    <Button colorScheme=\"gray\" onClick={onClose}>\n                        Cancel\n                    </Button>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n\n    </>)\n\n}\n\n\n\n// <Textarea value={repo.description} onChange={e => {\n//     setRepo({ description: e.target.value })\n// }}></Textarea> \n\nexport { RepoPicker }","import React from 'react';\nimport { Box, Select } from \"@chakra-ui/react\";\nimport { list } from '../templates/list';\nimport { useTheme } from '../providers/theme';\nimport { flattenSettings } from '../util/flattenSettings';\nimport { flattenSettingsRaw } from '../util/flattenSettingsRaw';\nimport { LayerRepeater } from './LayerRepeater';\nimport { Fieldset } from './sidebar/Fieldset';\nimport { RepoPicker } from './sidebar/pickers/RepoPicker';\n\nconst Sidebar = () => {\n\n    const [{ theme }, { setTheme, setHoveredLayer, setSelectedLayer }] = useTheme();\n\n    const onThemeChange = id => {\n        const options = require(`../templates/${id}/settings.js`);\n        const { layers, palette } = options;\n        setHoveredLayer(null);\n        setSelectedLayer(null);\n        setTheme({\n            id,\n            palette,\n            settings: layers,\n            userSettings: flattenSettings(layers),\n            userSettingsRaw: flattenSettingsRaw(layers)\n        })\n    }\n\n\n    return (\n        <Box\n            p={3}\n            w={250}\n            background=\"white\"\n            boxShadow=\"0 2px 4px rgba(0,0,0,0.1), 0 3px 12px rgba(0,0,0,0.05)\">\n\n            <Fieldset title=\"Repository\">\n                <RepoPicker />\n            </Fieldset>\n\n            <Fieldset title=\"Theme\">\n                <Select\n                    size=\"sm\"\n                    onChange={e => { onThemeChange(e.target.value) }}\n                    value={theme.id}>\n                    {list.map(item => (\n                        <option key={item.id} value={item.id}>\n                            {item.title}\n                        </option>\n                    ))}\n                </Select>\n            </Fieldset>\n\n            <Fieldset title=\"Layers\">\n                <LayerRepeater />\n            </Fieldset>\n\n        </Box>\n    )\n}\n\nexport { Sidebar }","import React from 'react';\nimport { Text, Flex, Box, Button, Link } from \"@chakra-ui/react\";\nimport pkg from '../../package.json';\n\nconst Toolbar = () => {\n\n    return (\n        <Flex\n            justifyContent=\"space-between\"\n            p={2}\n            boxShadow=\"0 2px 4px rgba(0,0,0,0.1), 0 3px 12px rgba(0,0,0,0.05)\"\n            pos=\"relative\"\n        >\n            <Flex>\n                <Text\n                    as=\"h1\"\n                    fontWeight=\"800\"\n                    fontSize=\"18px\"\n                    letterSpacing=\"-.025em\"\n                >\n                    OG Image Creator\n                </Text>\n                <Text\n                    as=\"span\"\n                    fontSize=\"10px\"\n                    letterSpacing=\".05em\"\n                    color=\"gray.500\"\n                    ml={2}\n                >\n                    <span style={{ marginRight: '1px' }}>V</span>\n                    {pkg.version}\n                </Text>\n            </Flex>\n            <Box justifySelf=\"flex-end\">\n                <Button colorScheme=\"teal\" variant=\"ghost\" size=\"sm\">\n                    <Link href=\"https://github.com/taitems/og-image-generator/issues\" isExternal>Issues/Feedback</Link>\n                </Button>\n            </Box>\n        </Flex>\n    )\n}\n\nexport { Toolbar }","import React from 'react';\nimport { Button, Tooltip } from \"@chakra-ui/react\"\nimport { useTheme } from '../providers/theme';\n\n\nconst DownloadButton = () => {\n\n    const [{ stageRef, layout }, { setSelectedLayer, setHoveredLayer }] = useTheme();\n\n    const downloadURI = (uri, name) => {\n        const link = document.createElement(\"a\");\n        link.download = name;\n        link.href = uri;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    const snapshot = () => {\n        const fragment = new Date().valueOf().toString().slice(-6);\n        const dataURL = stageRef.current.toDataURL({\n            x: 0,\n            y: 0,\n            width: layout.width,\n            height: layout.height\n        })\n        downloadURI(dataURL, `og-image-${fragment}`);\n    }\n\n    const download = stageRef => {\n        // Hide all UI boxes\n        setSelectedLayer(null);\n        setHoveredLayer(null);\n        setTimeout(() => {\n            snapshot(stageRef)\n        }, 100);\n    }\n\n    return (\n        <Tooltip label=\"Download as PNG\">\n            <Button\n                alignSelf=\"flex-end\"\n                width=\"100%\"\n                bg=\"gray.900\"\n                _hover={{ bg: \"gray.700\" }}\n                color=\"white\"\n                onClick={() => { download(stageRef) }}\n            >\n                Download\n            </Button>\n        </Tooltip>\n    );\n}\n\n\nexport { DownloadButton }","import React from 'react'\nimport { Box } from '@chakra-ui/react'\n\nconst EmptyState = ({ text }) => (\n    <Box textAlign=\"center\" fontSize=\"14px\" color=\"gray.600\" py={2}>{text}</Box>\n)\n\nexport { EmptyState }","import React, { useState } from 'react';\nimport { Input, Box } from '@chakra-ui/react';\nimport { SketchPicker } from 'react-color';\n\n\nconst ColorPicker = ({ id, value, color, onChange, palette, updateOpenState }) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const localOnChange = c => {\n        const { r, g, b, a } = c.rgb;\n        const color = a < 1 ? `rgba(${r},${g},${b},${a})` : c.hex;\n        onChange(color);\n    }\n\n    return (\n        <>\n            <Box position=\"relative\">\n                <Box\n                    position=\"absolute\"\n                    background={value}\n                    width={'20px'}\n                    height={'20px'}\n                    borderRadius={2}\n                    top=\"50%\"\n                    transform=\"translateY(-50%)\"\n                    left=\"8px\"\n                    boxShadow=\"0 1px 3px rgba(0,0,0,0.1)\"\n                />\n                <Input\n                    value={value}\n                    pl={'36px'}\n                    onClick={() => { setIsOpen(true) }}\n                    readOnly\n                />\n            </Box>\n            {isOpen && <>\n                <Box position=\"fixed\" top=\"0\" right=\"0\" bottom=\"0\" left=\"0\" onClick={() => {\n                    setIsOpen(false)\n                }} />\n                <Box position=\"absolute\" zIndex={2}>\n                    <SketchPicker\n                        color={color}\n                        onChange={localOnChange}\n                        presetColors={palette}\n                    />\n                </Box>\n            </>}\n        </>\n    )\n}\n\nexport { ColorPicker }","import React from 'react';\nimport {\n    Image,\n    Flex,\n    Box\n} from '@chakra-ui/react';\n\nconst Thumbs = ({ options, value, callback }) => {\n\n    const handleClick = val => {\n        if (val === value) {\n            return;\n        } else {\n            callback(val);\n        }\n    }\n\n    const selectedStyle = {\n        opacity: 0.2\n    }\n    const unselectedStyle = {\n        cursor: 'pointer'\n    }\n    return (\n        <Flex flexWrap=\"wrap\">\n            {options && options.map(p => {\n                const localStyle = p === value ? selectedStyle : unselectedStyle;\n                const thumbUrl = `images/${p.replace('.png', '-thumb.png')}`\n                return <Box p={3} key={p}>\n                    <Image\n                        src={thumbUrl}\n                        width={120}\n                        height={120}\n                        objectFit=\"contain\"\n                        {...localStyle}\n                        onClick={e => { handleClick(p) }}\n                    />\n                </Box>\n            })}\n        </Flex>\n    )\n};\n\nexport { Thumbs };","import React from 'react';\nimport {\n    Button,\n    Image,\n    useDisclosure,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n} from '@chakra-ui/react';\nimport { Thumbs } from './ImagePickerThumbs'\n\nconst ImagePicker = ({ onChange, value, options }) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    return (\n        <>\n            <Image src={`images/${value}`} width={100} />\n\n            <Button onClick={onOpen}>Open Modal</Button>\n\n            <Modal isOpen={isOpen} onClose={onClose} size=\"xl\">\n                <ModalOverlay />\n                <ModalContent>\n                    <ModalHeader>Choose Image</ModalHeader>\n                    <ModalCloseButton />\n                    <ModalBody>\n                        <Thumbs options={options} value={value} callback={val => {\n                            onChange(val);\n                            onClose();\n                        }} />\n                    </ModalBody>\n\n                    <ModalFooter>\n                        <Button colorScheme=\"blue\" onClick={onClose}>\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n        </>\n    )\n}\n\n\nexport { ImagePicker }","import React from 'react';\nimport { Select } from '@chakra-ui/react';\n\nconst FontPicker = ({ onChange, value, options }) => {\n    return (\n        <Select\n            zIndex={1}\n            size=\"sm\"\n            onChange={e => {\n                onChange(e.target.value)\n            }}\n            value={value}\n        >\n            {options.map(item => (\n                <option key={item} value={item}>\n                    {item}\n                </option>\n            ))}\n        </Select>\n    )\n}\n\nexport { FontPicker }","import React from 'react';\nimport { Textarea } from '@chakra-ui/react';\n\nconst DescriptionPicker = ({ onChange, value }) => {\n    return (\n        <Textarea\n            onChange={e => {\n                onChange(e.target.value)\n            }}\n            value={value || ''}\n        />\n    )\n}\n\nexport { DescriptionPicker }","import React from 'react'\nimport { useTheme } from '../providers/theme';\nimport { ImagePicker, ColorPicker, FontPicker, DescriptionPicker } from './sidebar/pickers';\n\nconst PropertySwitch = ({ type, id, value, options, onChange }) => {\n\n    const [{ repo, theme }] = useTheme();\n\n    return {\n        color: <ColorPicker key={id} value={value} color={value} onChange={val => onChange(id, val)} palette={theme.palette} />,\n        image: <ImagePicker key={id} value={value} options={options} onChange={val => onChange(id, val)} />,\n        font: <FontPicker key={id} value={value} options={options} onChange={val => onChange(id, val)} />,\n        description: <DescriptionPicker key={id} value={value || repo.description} onChange={val => onChange(id, val)} />\n    }[type]\n}\n\nexport { PropertySwitch }\n","import React from 'react';\nimport { Box } from '@chakra-ui/react';\nimport { EmptyState } from './EmptyState';\nimport { PropertySwitch } from './PropertySwitch';\n\nconst PropertyList = ({ properties, onSettingChange }) => {\n    const { visible, ...otherProperies } = properties;\n    if (!visible) {\n        return <EmptyState text=\"No visible layer selected\" />\n    } else if (!otherProperies || Object.keys(otherProperies).length === 0) {\n        return <EmptyState text=\"No editable properties\" />\n    } else {\n        return otherProperies && Object.keys(otherProperies).map((propertyId, index) => {\n            const p = otherProperies[propertyId];\n            return (\n                <Box key={index}>\n                    <Box>\n                        {p.label}\n                    </Box>\n                    <Box>\n                        <PropertySwitch\n                            value={p.value}\n                            id={p.id}\n                            type={p.type}\n                            options={p.options}\n                            onChange={onSettingChange} />\n                    </Box>\n                </Box>\n            )\n        })\n    }\n}\n\nexport { PropertyList }","import React from 'react';\nimport { Box, Flex } from '@chakra-ui/react';\nimport { useTheme } from '../providers/theme';\nimport { merge } from 'lodash';\nimport { DownloadButton } from './DownloadButton';\nimport { Fieldset } from './sidebar/Fieldset';\nimport { EmptyState } from './EmptyState';\nimport { PropertyList } from './PropertyList';\n\nconst Properties = () => {\n\n    const [{ theme, selectedLayer }, { setTheme }] = useTheme();\n\n    const onSettingChange = (settingKey, settingValue) => {\n\n        const newFlatSettings = merge(theme.userSettings, {\n            [selectedLayer]: {\n                [settingKey]: settingValue\n            }\n        });\n        const newRawSettings = merge(theme.userSettingsRaw, {\n            [selectedLayer]: {\n                [settingKey]: {\n                    value: settingValue\n                }\n            }\n        });\n        setTheme({\n            userSettings: newFlatSettings,\n            userSettingsRaw: newRawSettings,\n        })\n    }\n\n    const values = theme.userSettingsRaw && selectedLayer && theme.userSettingsRaw[selectedLayer];\n\n    return (\n        <Flex\n            p={3}\n            w={250}\n            background=\"white\"\n            boxShadow=\"0 2px 4px rgba(0,0,0,0.1), 0 3px 12px rgba(0,0,0,0.05)\"\n            flexDirection=\"column\"\n        >\n            <Box flexGrow={1}>\n                <Fieldset title=\"Layer Properties\">\n                    {theme.userSettingsRaw && selectedLayer ?\n                        <PropertyList properties={values} onSettingChange={onSettingChange} />\n                        :\n                        <EmptyState text=\"No layer selected\" />\n                    }\n                </Fieldset>\n            </Box>\n            <Fieldset title=\"Save &amp; Export\">\n                <DownloadButton />\n            </Fieldset>\n        </Flex>\n    );\n\n}\n\nexport { Properties }\n","import React from 'react';\nimport { Flex } from \"@chakra-ui/react\";\nimport { Artboard } from './components/Artboard';\nimport { Sidebar } from './components/Sidebar';\nimport { Toolbar } from './components/Toolbar';\nimport { Properties } from './components/Properties';\nimport { useTheme } from './providers/theme';\n\n\n\nconst EditorLayout = () => {\n\n  const { setSelectedLayer } = useTheme()[1];\n\n  const handleClickOut = e => {\n    if (!!e.target.getAttribute('data-id')) {\n      setSelectedLayer(null)\n    }\n  }\n  return (\n    <Flex height=\"100vh\" direction=\"column\">\n      <Toolbar />\n      <Flex height=\"100%\" bg=\"gray.50\">\n        <Sidebar />\n        <Flex\n          flexGrow={1}\n          flexShrink={1}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          overflow=\"hidden\"\n          onClick={handleClickOut}\n          data-id=\"artboard-wrapper\"\n        >\n          <Artboard />\n        </Flex>\n        <Properties />\n      </Flex>\n    </Flex>\n  )\n}\n\nexport { EditorLayout };\n","import React from 'react';\nimport {\n    Link\n} from \"react-router-dom\";\n\nimport { Link as ChakraLink, Heading, Text, Image, Flex, Box, Button } from \"@chakra-ui/react\";\n\nconst LandingPage = () => {\n\n    return <Box display=\"grid\" placeItems=\"center\" height=\"100vh\">\n        <Flex flexDirection=\"column\" textAlign=\"center\" alignItems=\"center\">\n\n            <Image src=\"example.png\" width={400} alt=\"Example images generated by the tool\" />\n\n            <Heading>OG Image Creator</Heading>\n\n            <Text\n                as=\"p\"\n                width=\"100%\"\n                maxWidth={600}\n                fontSize={20}\n                mt={3}\n                mb={4}\n            >\n                An open source tool to create Open Graph images for use in your Github Repositories and on social media.\n            </Text>\n\n            <Link to=\"/editor\">\n                <Button\n                    bg=\"gray.900\"\n                    _hover={{ bg: \"gray.700\" }}\n                    color=\"white\"\n                    px={8}\n                    mb={3}\n                >\n                    Open Editor\n                </Button>\n            </Link>\n\n            <Text\n                as=\"p\"\n                fontSize={14}\n                color=\"gray.500\"\n            >\n                Built by <ChakraLink href=\"http://taitbrown.com\" target=\"_blank\">@taitems</ChakraLink> in Melbourne, Australia.\n            </Text>\n        </Flex>\n    </Box>\n\n}\n\nexport { LandingPage }","import React, { useState } from 'react';\nimport './App.css';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport { ThemeProvider } from './providers/theme';\nimport { EditorLayout } from './EditorLayout';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { LandingPage } from './LandingPage';\n\nvar FontFaceObserver = require('fontfaceobserver');\n\nfunction App() {\n\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n\n  var fontA400 = new FontFaceObserver('Inter', {\n    weight: 400\n  });\n  var fontA600 = new FontFaceObserver('Inter', {\n    weight: 600\n  })\n  var fontA800 = new FontFaceObserver('Inter', {\n    weight: 800\n  })\n  var fontC = new FontFaceObserver('Poppins', {\n    weight: 600\n  });\n  var fontD = new FontFaceObserver('Libre Baskerville', {\n    weight: 400\n  });\n  var fontE = new FontFaceObserver('Libre Baskerville', {\n    weight: 700\n  });\n\n  Promise.all([\n    fontA400.load(),\n    fontA600.load(),\n    fontA800.load(),\n    fontC.load(),\n    fontD.load(),\n    fontE.load(),\n  ]).then(function () {\n    setFontsLoaded(true);\n  });\n\n  return fontsLoaded && (\n    <Router>\n      <ChakraProvider>\n        <ThemeProvider>\n          <Switch>\n            <Route exact path=\"/\">\n              <LandingPage />\n            </Route>\n            <Route path=\"/editor\">\n              <EditorLayout />\n            </Route>\n          </Switch>\n        </ThemeProvider>\n      </ChakraProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}